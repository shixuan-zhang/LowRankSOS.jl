include("../src/LowRankSOS.jl")
using .LowRankSOS
# import the constructions of the example varieties
include("toric_variety/Veronese.jl")
include("toric_variety/scroll.jl")
include("plane_curve/cubic.jl")

# set the experiment parameters
const SCROLL_HEIGHTS = [2,3]
const CUBIC_DEGREE = 40
const VERONESE_DIM_DEG = (5,6)
const NUM_SQ_ADD = collect(0:5)

# check the command line arguments
num_args = length(ARGS)
## by default we run experiments on all examples
str_example = "scroll" # or "cubic", "Veronese"
if num_args > 0
    str_example = ARGS[1]
end


# function that conducts a comparison between low-rank and full-rank methods
function run_comparisons()
    # create the coordinate ring
    if str_example == "scroll"
        coord_ring = build_ring_scroll(SCROLL_HEIGHTS)
    elseif str_example == "cubic"
        _, coord_ring = generate_plane_cubic(CUBIC_DEGREE)
    elseif str_example == "Veronese"
        coord_ring = build_ring_Veronese(VERONESE_DIM_DEG[1], VERONESE_DIM_DEG[2])
    else
        error("Unsupported example for comparison!")
    end
    # choose randomly a target (generated by a random tuple of linear forms with full rank)
    tuple_random = rand(coord_ring.dim1*coord_ring.dim1)
    target_sos = get_sos(tuple_random, coord_ring)
    target_sos ./= norm(target_sos)
    # get the baseline rank
    rank_base = get_BP_bound(coord_ring)
    if str_example == "scroll"
        rank_base = length(SCROLL_HEIGHTS)+1
    elseif str_example == "cubic"
        rank_base = 3
    end
    # call the external solvers for comparison
    for rank in rank_base .+ NUM_SQ_ADD
        # choose randomly a starting point
        tuple_start = rand(rank*coord_ring.dim1)
        tuple_start ./= norm(tuple_start)
        # rescale the target and the starting point to avoid numerical issues
        println("Run NLopt L-BFGS method with ", rank, " squares...")
        call_NLopt(rank, target_sos, coord_ring, tuple_linear_forms=tuple_start, print_level=1)
    end
    println()
    println("Run CSDP interior-point methods with ", coord_ring.dim1, " squares...")
    flush(stdout)
    call_CSDP(target_sos, coord_ring, print_level=1)
end

run_comparisons()
